S -> ENTER S
S -> S ENTER
S -> ENTER
S -> SS
SS -> PART SS
PART -> FUNC_STATEMENT
PART -> FOR_STATEMENT
PART -> IF_STATEMENT
PART -> WHILE_STATEMENT
PART -> SENTENCE
EXP -> ID OP_ROUND_BRACKET CL_ROUND_BRACKET
EXP -> ID OP_ROUND_BRACKET PARAM CL_ROUND_BRACKET
EXP -> BOOLEAN
EXP -> ID_INT
EXP -> EXP ARITH_OP EXP
SENTENCE -> IF_BLOCK
FUNCTION -> ID OP_ROUND_BRACKET CL_ROUND_BRACKET
FUNCTION -> ID OP_ROUND_BRACKET PARAM CL_ROUND_BRACKET
TERNARY_STATEMENT -> EXP TERNARY SENTENCE TITIKDUA SENTENCE
TERNARY_STATEMENT -> STATEMENT TERNARY SENTENCE TITIKDUA SENTENCE
TERNARY_STATEMENT -> ID TERNARY SENTENCE TITIKDUA SENTENCE
TERNARY_STATEMENT -> FUNCTION TERNARY SENTENCE TITIKDUA SENTENCE
TERNARY_STATEMENT -> METHOD_STMT TERNARY SENTENCE TITIKDUA SENTENCE
TERNARY_STATEMENT -> LOGIC_OPR TERNARY SENTENCE TITIKDUA SENTENCE
IF_STATEMENT -> IF EXP OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_STATEMENT -> IF STATEMENT OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_STATEMENT -> IF ID OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_STATEMENT -> IF FUNCTION OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_STATEMENT -> IF METHOD_STMT OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_STATEMENT -> IF LOGIC_OPR OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF EXP OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF STATEMENT OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF ID OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF FUNCTION OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF METHOD_STMT OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_STATEMENT -> ELSE IF LOGIC_OPR OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
ELSEIF_MULTIPLE -> ELSEIF_STATEMENT
ELSEIF_MULTIPLE -> ELSEIF_STATEMENT ELSEIF_MULTIPLE
ELSE_STATEMENT -> ELSE OP_CURLY_BRACKET ENTER SENTENCE CL_CURLY_BRACKET
IF_BLOCK -> IF_STATEMENT
IF_BLOCK -> IF_STATEMENT ELSE_STATEMENT
IF_BLOCK -> IF_STATEMENT ELSEIF_MULTIPLE
IF_BLOCK -> IF_STATEMENT ELSEIF_MULTIPLE ELSE_STATEMENT
FOR_LOOP -> FOR OP_ROUND_BRACKET EXP TITIKKOMA EXP TITIKKOMA EXP CL_ROUND_BRACKET OP_CURLY_BRACKET ENTER LOOP_SENTENCE CL_CURLY_BRACKET
FOR_LOOP -> FOR OP_ROUND_BRACKET ID IN ID CL_ROUND_BRACKET OP_CURLY_BRACKET ENTER LOOP_SENTENCE CL_CURLY_BRACKET
WHILE_LOOP -> WHILE LOGIC_OPR OP_CURLY_BRACKET ENTER LOOP_SENTENCE CL_CURLY_BRACKET
WHILE_LOOP -> WHILE ID_INT OP_CURLY_BRACKET ENTER LOOP_SENTENCE CL_CURLY_BRACKET
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
ENTER -> NEWLINE
ENTER -> NEWLINE ENTER
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> ID_INT
LOGI_ID -> NOT ID_INT
LOGI_ID -> BOOLEAN
LOGI_ID -> NOT LOGI_ID
LOGI_ID -> OP_ROUND_BRACKET LOGI_ID CL_ROUND_BRACKET
LOGIC_OPR -> ID
LOGIC_OPR -> NOT LOGIC_OPR
LOGIC_OPR -> LOGI_ID LOGIC_OP LOGIC_OPR
LOGIC_OPR -> LOGI_ID LOGIC_OP LOGI_ID
LOGIC_OPR -> OP_ROUND_BRACKET LOGIC_OPR CL_ROUND_BRACKET
LOGIC_OP -> AND
LOGIC_OP -> OR
LOGIC_OP -> NOT
LOGIC_OP -> LESS
LOGIC_OP -> LEQ
LOGIC_OP -> GREATER
LOGIC_OP -> GEQ
LOGIC_OP -> ISEQ
LOGIC_OP -> ISEQTYPE
LOGIC_OP -> ISNEQ
LOGIC_OP -> ISNEQTYPE
LOGIC_OP -> TERNARY
ARITH_OPR -> ID ARITH_OP ARITH_OPR
ARITH_OPR -> STATIC ARITH_OP ARITH_OPR
ARITH_OPR -> ID ARITH_OP ID
ARITH_OPR -> STATIC ARITH_OP ID
ARITH_OPR -> ID ARITH_OP STATIC
ARITH_OPR -> STATIC ARITH_OP STATIC
ARITH_OPR -> OP_ROUND_BRACKET ARITH_OPR CL_ROUND_BRACKET
ARITH_OPR -> TYPE OP_ROUND_BRACKET ARITH_OPR CL_ROUND_BRACKET
ARITH_OP -> TAMBAH
ARITH_OP -> KURANG
ARITH_OP -> KALI
ARITH_OP -> BAGI
ARITH_OP -> MOD
ARITH_OP -> PANGKAT
ASSIGN_OP -> TAMBAHSD
ASSIGN_OP -> KURANGSD
ASSIGN_OP -> KALISD
ASSIGN_OP -> BAGISD
ASSIGN_OP -> MODSD
ASSIGN_OP -> PANGKATSD
ASSIGN_OP -> INCREMENT
ASSIGN_OP -> DECREMENT
VAR_DEC -> VAR
VAR_DEC -> LET
VAR_DEC -> CONST
STATIC -> INT
STATIC -> STRING
STATIC -> ARRAY
STATIC -> OBJECT
STATIC -> BOOLEAN
ARRAY -> OP_SQUARE_BRACKET CL_SQUARE_BRACKET
ARRAY -> OP_SQUARE_BRACKET PARAM CL_SQUARE_BRACKET
OBJECT -> OP_CURLY_BRACKET CL_CURLY_BRACKET
OBJECT -> OP_CURLY_BRACKET OBJECTPARAM CL_CURLY_BRACKET
OBJECTPARAM -> STATIC TITIKDUA STATIC
OBJECTPARAM -> OBJECTPARAM COMMA OBJECTPARAM
BOOLEAN -> TRUE
BOOLEAN -> FALSE
BOOLEAN -> NONE
BOOLEAN -> NOT BOOLEAN